#!/usr/bin/env python3
"""
–ó–∞–ª–∏–≤–∞–µ—Ç –≤—Å–µ mp4 –∏–∑ videos/ –∫–∞–∫ PUBLIC-Shorts.
"""

import os, pathlib, sys, time
from googleapiclient.discovery import build
from googleapiclient.http      import MediaFileUpload
from googleapiclient.errors    import HttpError
from google.oauth2.credentials import Credentials
import google.auth.transport.requests as tr

YT_SCOPES = ["https://www.googleapis.com/auth/youtube.upload"]

creds = Credentials(
    None,
    refresh_token = os.getenv("YT_REFRESH_TOKEN"),
    client_id     = os.getenv("YT_CLIENT_ID"),
    client_secret = os.getenv("YT_CLIENT_SECRET"),
    token_uri     = "https://oauth2.googleapis.com/token",
    scopes        = YT_SCOPES,
)
creds.refresh(tr.Request())
yt = build("youtube", "v3", credentials=creds, cache_discovery=False)

TAGLIST = ["—Ñ–∏–Ω–∞–Ω—Å—ã","–ª–∏—á–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã","–¥–µ–Ω—å–≥–∏","shorts","money","finance"]

VIDEOS = sorted(pathlib.Path("videos").glob("voice_*.mp4"))
if not VIDEOS:
    sys.exit("‚ùå  –ù–µ—Ç mp4 –≤ videos/")

for vid in VIDEOS:
    idx = vid.stem.split('_')[-1]
    body = {
        "snippet": {
            "title": f"–§–∏–Ω—Å–æ–≤–µ—Ç #{idx} ‚Ä¢ –¥–æ 1 –º–∏–Ω—É—Ç—ã",
            "description": "–ö–æ—Ä–æ—Ç–∫–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –¥–µ–Ω—å–≥–∞–º–∏ #—Ñ–∏–Ω–∞–Ω—Å—ã #shorts",
            "categoryId": "22",
            "tags": TAGLIST,
        },
        "status": {"privacyStatus": "public"}
    }
    media = MediaFileUpload(vid, mimetype="video/mp4", resumable=True)
    try:
        resp = yt.videos().insert(part="snippet,status", body=body,
                                  media_body=media).execute()
        print("üì§", f"https://youtu.be/{resp['id']}")
    except HttpError as e:
        if e.resp.status == 403 and "uploadLimitExceeded" in e.error_details[0]["reason"]:
            sys.exit("‚ö†Ô∏è  –î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç YouTube –∏—Å—á–µ—Ä–ø–∞–Ω")
        print("‚ùå  –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", e)
        time.sleep(15)
